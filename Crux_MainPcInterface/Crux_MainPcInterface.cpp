
// Crux_MainPcInterface.cpp : 응용 프로그램에 대한 클래스 동작을 정의합니다.
//

#include "stdafx.h"
#include "Crux_MainPcInterface.h"
#include "Crux_MainPcInterfaceDlg.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CCrux_MainPcInterfaceApp

BEGIN_MESSAGE_MAP(CCrux_MainPcInterfaceApp, CWinApp)
	ON_COMMAND(ID_HELP, &CWinApp::OnHelp)
END_MESSAGE_MAP()


// CCrux_MainPcInterfaceApp 생성

CCrux_MainPcInterfaceApp::CCrux_MainPcInterfaceApp()
{
	// 다시 시작 관리자 지원
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_RESTART;

	// TODO: 여기에 생성 코드를 추가합니다.
	// InitInstance에 모든 중요한 초기화 작업을 배치합니다.

	CString strArgv = __targv[1];
	strArgv = strArgv.MakeLower();
	if (strArgv == _T("simul") || strArgv == _T("simulation") || strArgv == _T("1"))
	{
		m_bSimulationProgramMode = TRUE;
	}


	TCHAR szTemp[100] = {0,};
	CString strIsSimulMode;
	GetPrivateProfileString(_T("Common"), _T("SIMULATION Mode") ,_T("FALSE"), szTemp, sizeof(szTemp), INIT_FILE_PATH);
	strIsSimulMode = szTemp;
	strIsSimulMode = strIsSimulMode.MakeLower();
	if ( strIsSimulMode == _T("true"))
	{
		//ShellExecute(NULL, _T("open"), _T("Crux_MainPcInterface.exe"), NULL, NULL, SW_SHOW);
		m_bSimulationMode = TRUE;
	}	

	// 실제 구동 환경에서는 시물레이터가 필요 없다. 시물레이터는 종료한다.
	if (m_bSimulationMode == FALSE && m_bSimulationProgramMode == TRUE)
	{
		PostQuitMessage(0);
	}
}


// 유일한 CCrux_MainPcInterfaceApp 개체입니다.

CCrux_MainPcInterfaceApp theApp;


// CCrux_MainPcInterfaceApp 초기화

BOOL CCrux_MainPcInterfaceApp::InitInstance()
{
	// 응용 프로그램 매니페스트가 ComCtl32.dll 버전 6 이상을 사용하여 비주얼 스타일을
	// 사용하도록 지정하는 경우, Windows XP 상에서 반드시 InitCommonControlsEx()가 필요합니다.
	// InitCommonControlsEx()를 사용하지 않으면 창을 만들 수 없습니다.
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 응용 프로그램에서 사용할 모든 공용 컨트롤 클래스를 포함하도록
	// 이 항목을 설정하십시오.
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();

	if (!AfxSocketInit())
	{
		AfxMessageBox(IDP_SOCKETS_INIT_FAILED);
		return FALSE;
	}


	AfxEnableControlContainer();

	// 대화 상자에 셸 트리 뷰 또는
	// 셸 목록 뷰 컨트롤이 포함되어 있는 경우 셸 관리자를 만듭니다.
	CShellManager *pShellManager = new CShellManager;

	// 표준 초기화
	// 이들 기능을 사용하지 않고 최종 실행 파일의 크기를 줄이려면
	// 아래에서 필요 없는 특정 초기화
	// 루틴을 제거해야 합니다.
	// 해당 설정이 저장된 레지스트리 키를 변경하십시오.
	// TODO: 이 문자열을 회사 또는 조직의 이름과 같은
	// 적절한 내용으로 수정해야 합니다.
	SetRegistryKey(_T("로컬 응용 프로그램 마법사에서 생성된 응용 프로그램"));

	m_nPCNum		= GetPrivateProfileInt(_T("Common"), _T("VISION PC NUM"), 1, INIT_FILE_PATH);
	m_nInspType		= GetPrivateProfileInt(_T("Common"), _T("TYPE"), 1, INIT_FILE_PATH);
	
	// YHS 18.03.12 - Merge Tool 사용 여부
	m_nInspStep		= GetPrivateProfileInt(_T("MergeTool"),_T("USE_MERGE_TOOL"),1,INIT_FILE_PATH)? true : false;

	m_nGrabLimitCount = GetPrivateProfileInt(_T("Grab Limit"), _T("Grab Limit Count"), 3, INIT_FILE_PATH);
	m_nGrabLimitWaitTime = GetPrivateProfileInt(_T("Grab Limit"), _T("Grab Limit Wait Time"), 30000, INIT_FILE_PATH);

	CCrux_MainPcInterfaceDlg dlg;
	m_pMainWnd = &dlg;
	INT_PTR nResponse = dlg.DoModal();
	if (nResponse == IDOK)
	{
		// TODO: 여기에 [확인]을 클릭하여 대화 상자가 없어질 때 처리할
		//  코드를 배치합니다.
	}
	else if (nResponse == IDCANCEL)
	{
		// TODO: 여기에 [취소]를 클릭하여 대화 상자가 없어질 때 처리할
		//  코드를 배치합니다.
	}

	// 위에서 만든 셸 관리자를 삭제합니다.
	if (pShellManager != NULL)
	{
		delete pShellManager;
	}

	// 대화 상자가 닫혔으므로 응용 프로그램의 메시지 펌프를 시작하지 않고  응용 프로그램을 끝낼 수 있도록 FALSE를
	// 반환합니다.
	return FALSE;
}

